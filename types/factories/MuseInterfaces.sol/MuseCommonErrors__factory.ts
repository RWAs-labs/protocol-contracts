/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  MuseCommonErrors,
  MuseCommonErrorsInterface,
} from "../../MuseInterfaces.sol/MuseCommonErrors";

const _abi = [
  {
    type: "error",
    name: "InvalidAddress",
    inputs: [],
  },
] as const;

export class MuseCommonErrors__factory {
  static readonly abi = _abi;
  static createInterface(): MuseCommonErrorsInterface {
    return new Interface(_abi) as MuseCommonErrorsInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): MuseCommonErrors {
    return new Contract(address, _abi, runner) as unknown as MuseCommonErrors;
  }
}
